// Code generated by MockGen. DO NOT EDIT.
// Source: sender.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	gomail_v2 "gopkg.in/gomail.v2"
	reflect "reflect"
)

// Mockdealer is a mock of dealer interface
type Mockdealer struct {
	ctrl     *gomock.Controller
	recorder *MockdealerMockRecorder
}

// MockdealerMockRecorder is the mock recorder for Mockdealer
type MockdealerMockRecorder struct {
	mock *Mockdealer
}

// NewMockdealer creates a new mock instance
func NewMockdealer(ctrl *gomock.Controller) *Mockdealer {
	mock := &Mockdealer{ctrl: ctrl}
	mock.recorder = &MockdealerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockdealer) EXPECT() *MockdealerMockRecorder {
	return m.recorder
}

// Dial mocks base method
func (m *Mockdealer) Dial() (gomail_v2.SendCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dial")
	ret0, _ := ret[0].(gomail_v2.SendCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dial indicates an expected call of Dial
func (mr *MockdealerMockRecorder) Dial() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dial", reflect.TypeOf((*Mockdealer)(nil).Dial))
}
